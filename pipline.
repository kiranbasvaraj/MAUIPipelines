IOS----------------------------------- CHANGES STARTS FROM HERE


# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
parameters:
  - name: environment
    displayName: 'Select an Environment'
    type: string
    default: 'Release'
    values:
    - Debug
    - Release
 
variables:
  - name: ENVIRONMENT
    value: ${{ parameters.environment }}
  - name: Version
    value: 2.0
 
trigger:
- master
 
pool:
   vmImage: 'macos-14'
   demands: xcode

 
steps:
- task: Bash@3
  displayName: Set XCode Version
  inputs:
      targetType: 'inline'
      script: |
        sudo xcode-select -s "/Applications/Xcode_16.app"
        echo "##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]/Applications/Xcode_16.app"
- script: |
      echo "Checking Xcode Version..."
      xcodebuild -version
  displayName: 'check version'
#- task: Bash@3
# inputs:
  #  targetType: 'inline'
   # script: >2-
    #      #!/bin/bash
     #     if [ "$(ENVIRONMENT)" != "dev" ] && [ "$(ENVIRONMENT)" != "" ]
      #    then
       #     LANG=c sed -i '' 's/Data.SvcConfig.json/Data.SvcConfig.$(ENVIRONMENT).json/g' Mobile/Ecolab.StainId.Mobile/Utils/Constants.cs
        #  else
         #   echo "No change to Constants.cs"
          #fi
- task: UseDotNet@2
  displayName: 'Install .NET sdk'
  inputs:
    packageType: sdk
    version: 8.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet
 
- task: CmdLine@2
  displayName: 'Install Maui Workload'
  inputs:
    script: 'dotnet workload install maui'
 
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'LowEnvDistributionJuly24.p12'
    certPwd: 'Ecolab@123'
    keychain: 'temp'
 
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'aidishmachineapp_inhouse_distribution_Jul242027.mobileprovision'
 
- task: ios-bundle-identifier@1
  inputs:
    sourcePath: 'AppCore/AIDishmachine/Platforms/iOS/Info.plist'
    bundleIdentifier: 'com.ecolab.apps.aidishmachine'
    printFile: true
 
- task: ios-bundle-version@1
  inputs:
    sourcePath: 'AppCore/AIDishmachine/Platforms/iOS/Info.plist'
    versionCodeOption: 'buildid'
    versionCode: '$(Version).$(Build.BuildId)'
    versionName: '$(Version).$(Build.BuildId)'
    versionCodeOffset: '0'
    printFile: true
 
- task: CmdLine@2
  displayName: 'Build the iOS Binaries'
  inputs:
        script: |
          dotnet publish AppCore/AIDishmachine/AIDishmachine.Mobile.csproj  -f net8.0-ios -c $(ENVIRONMENT) /p:ApplicationId=com.ecolab.apps.aidishmachine /p:ArchiveOnBuild=true /p:EnableAssemblyILStripping=false
 
- task: CopyFiles@2
  displayName: 'Copy file from Build to Staging'
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/*.ipa'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true
 
- task: PublishBuildArtifacts@1
  displayName: 'Publish the Staging Files.'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'AIdishmachine_iOS_Artifact'
    publishLocation: 'Container'
- task: AppCenterDistribute@3
  displayName: 'Deploy Ecolab One Mobile IOS LOW ENV Visual Studio App Center'
  inputs:
    serverEndpoint: 'AIDishmachine-IOS-Low-ENV'
    appSlug: 'Ecolab-CDS-Mobile/AIDishmachine-IOS-Low-ENV'
    appFile: '$(Build.ArtifactStagingDirectory)/s/AppCore/AIDishmachine/bin/$(ENVIRONMENT)/net8.0-ios/ios-arm64/publish/aidishmachine.Mobile.ipa'
    packParentFolder: false
    symbolsIncludeParentDirectory: false
    releaseNotesInput: 'Released from Azure DevOps'
    isSilent: false






ANDROID------------------CHANGES STARTS FROM HERE
# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
 
trigger:
- master
 
parameters:
  - name: environment
    displayName: 'Select an Environment'
    type: string
    default: 'Release'
    values:
    - Debug
    - Release
 
variables:
- name: buildConfiguration
  value: 'Release'
- name: ENVIRONMENT
  value: ${{ parameters.environment }}
- name: Version
  value: 2.0
- name: VersionWithoutPeriod
  value: 20
- name: outputDirectory
  value: '$(build.binariesDirectory)/$(buildConfiguration)'
 
pool:
  vmImage: 'windows-latest'
 
steps:
- task: DownloadSecureFile@1
  inputs:
    secureFile: 'ecolabaidishmachine.keystore'
    retryCount: '2'
 
#- task: Bash@3
# inputs:
  #  targetType: 'inline'
   # script: >2-
    #      #!/bin/bash
     #     if [ "$(ENVIRONMENT)" != "dev" ] && [ "$(ENVIRONMENT)" != "" ]
      #    then
       #     LANG=c sed -i '' 's/Data.SvcConfig.json/Data.SvcConfig.$(ENVIRONMENT).json/g' Mobile/Ecolab.StainId.Mobile/Utils/Constants.cs
        #    echo "changes to Constants.cs"
         # else
          #  echo "No change to Constants.cs"
          #fi
- task: android-manifest-version@1
  inputs:
      sourcePath: 'AppCore/AIDishmachine/Platforms/Android/AndroidManifest.xml'
      versionCodeOption: 'buildid'
      versionCode: '$(VersionWithoutPeriod)$(Build.BuildId)'
      versionName: '$(Version)$(Build.BuildId)'
      printFile: true
 
- task: android-manifest-package-name@1
  inputs:
        sourcePath: 'AppCore/AIDishmachine/Platforms/Android/AndroidManifest.xml'
        packageName: 'com.ecolab.apps.com.ecolab.apps.aidishmachine'
        appLabel: 'AIDishmachine'
        printFile: true
- task: UseDotNet@2
  displayName: 'Install .NET sdk'
  inputs:
    packageType: sdk
    version: 8.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet
 
    # Install Java SDK for Android
- task: JavaToolInstaller@0
  displayName: 'Install Java SDK'
  inputs:
        versionSpec: '11'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
 
- task: CmdLine@2
  displayName: 'Install Maui Workload'
  inputs:
    script: 'dotnet workload install maui'
 
- task: CmdLine@2
  displayName: 'Build project'
  inputs:
        script: |
           dotnet publish AppCore/AIDishmachine/AIDishmachine.Mobile.csproj -f net8.0-android -c $(ENVIRONMENT) /p:AndroidSigningKeyPass=Ecolab@123 /p:AndroidSigningStorePass=Ecolab@123
 
- task: CopyFiles@2
  displayName: 'Copy file from Build to Staging'
  inputs:
    SourceFolder: '$(Agent.BuildDirectory)'
    Contents: '**/*.aab'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true
 
- task: PublishBuildArtifacts@1
  displayName: 'Publish the Staging Files.'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'AIDishmachine_Android_Artifact'
    publishLocation: 'Container'

 
- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'AIDishmachine-Android-Low-ENV'
    appSlug: 'Ecolab-CDS-Mobile/AIDishmachine-Andriod-Low-ENV'
    appFile: '$(Build.ArtifactStagingDirectory)/s/AppCore/AIDishmachine/bin/$(ENVIRONMENT)/net8.0-android/com.ecolab.apps.com.ecolab.apps.aidishmachine-Signed.aab'
    releaseNotesOption: 'input'
    releaseNotesInput: 'Azure Depos relase'
    destinationType: 'groups'
